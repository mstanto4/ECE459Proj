library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.ALL;
use IEEE.std_logic_textio.all;

library std;
use std.textio.all;

entity c1908Netlist_tb is
-- Port ();
end c1908Netlist_tb;

architecture behavioral of c1908Netlist_tb is
  signal TG101, TG104, TG107, TG110, TG113, TG116, TG119, TG122, TG125, TG128, 
  TG131, TG134, TG137, TG140, TG143, TG146, TG210, TG214, TG217, TG221, 
  TG224, TG227, TG234, TG237, TG469, TG472, TG475, TG478, TG898, TG900, 
  TG902, TG952, TG953: std_logic := '0';
  signal Tout: std_logic_vector(24 downto 0);
begin
  L1: entity work.c1908Netlist(behavioral)
  port map(G101=> TG101, G104=> TG104, G107=> TG107, G110=> TG110, G113=> TG113, G116=> TG116, G119=> TG119, G122=> TG122, G125=> TG125, G128=> TG128, 
  G131=> TG131, G134=> TG134, G137=> TG137, G140=> TG140, G143=> TG143, G146=> TG146, G210=> TG210, G214=> TG214, G217=> TG217, G221=> TG221, 
  G224=> TG224, G227=> TG227, G234=> TG234, G237=> TG237, G469=> TG469, G472=> TG472, G475=> TG475, G478=> TG478, G898=> TG898, G900=> TG900, 
  G902=> TG902, G952=> TG952, G3=> Tout(0), G6=> Tout(1), G9=> Tout(2), G12=> Tout(3), G30=> Tout(4), G45=> Tout(5), G48=> Tout(6), G15=> Tout(7), G18=> Tout(8), G21=> Tout(9), 
  G24=> Tout(10), G27=> Tout(11), G33=> Tout(12), G36=> Tout(13), G39=> Tout(14), G42=> Tout(15), G75=> Tout(16), G51=> Tout(17), G54=> Tout(18), G60=> Tout(19), 
  G63=> Tout(20), G66=> Tout(21), G69=> Tout(22), G72=> Tout(23), G57=> Tout(24), G953=> TG953);

  process
    file result: text is out "c1908Netlist.txt"; -- file pointer to output results file
    variable outLine: line; -- variable to store contents of line to/from files
    variable Toutput: bit_vector(24 downto 0); -- variable for data transfer to/from files
  begin
    -- print out description
    write(outLine, string'("c1908Netlist Original Output"));  -- write Toutput to output line
    writeline(result, outLine);  -- write output line to output file
    -- Run simulation for a total of 10 ns
    wait for 10 ns;
    Toutput := to_bitvector(Tout);  -- save output to variable
    write(outLine, Touput);  -- write Touput to output line
    writeline(result, outLine);  -- write output line to output file
    wait;
  end process;
end behavioral;
